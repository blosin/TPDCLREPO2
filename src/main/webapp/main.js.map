{"version":3,"sources":["./src/app/Servicios/categoria.service.ts","./src/environments/environment.ts","./src/app/Servicios/evento.service.ts","./src/app/app.module.ts","./src/app/Servicios/statuses-de-issue.service.ts","./src/app/Servicios/project.service.ts","./src/app/Componentes/average/average.component.ts","./src/app/Componentes/average/average.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoriaService {\n\n  resourceUrl: string;\n  constructor(private httpClient: HttpClient) {\n    this.resourceUrl='http://'+window.location.hostname+':3000/issues_api/';\n     \n   }\n\n   getById(id:number)\n   {\n     return this.httpClient.get(this.resourceUrl+'getCategories?id='+ id);\n     \n   }\n   getCategoriaInfo(id:number)\n   {\n     return this.httpClient.get(this.resourceUrl+'getinfoCategory?id='+id);\n   }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport {  HttpClient } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventoService {\n\n  resourceUrl: string;\n  constructor(private httpClient: HttpClient) {\n    this.resourceUrl='http://'+window.location.hostname+':3000/issues_api/';\n   }\n\n  getAverages1ProyectoResolved(nro: number, nro2: number)\n  {\n    return this.httpClient.get(this.resourceUrl+'AvgProject?id='+nro+'&id2='+nro2);\n  }\n  getAverages1Proyecto1CategoriaResolved(nro:number, nro2: number)\n  {\n    return this.httpClient.get(this.resourceUrl+'AvgPryCat?id='+nro+'&id2='+nro2);\n  }\n  getAverages1ProyectoTodasCategoriasResolved(nro: number, nro2: number)\n  {\n    return this.httpClient.get(this.resourceUrl+'AvgPryAllCat?id='+nro+'&id2='+nro2);\n  }\n  getAveragesTodosProyectos0categoriaResolved(nro2:number){\n    return this.httpClient.get(this.resourceUrl+'AvgAllProjects?id2='+nro2);\n  }\n\n  getAverages1Proyecto(nro: number)\n  {\n    return this.httpClient.get(this.resourceUrl+'AvgProject?id='+nro);\n  }\n  getAverages1Proyecto1Categoria(nro:number)\n  {\n    return this.httpClient.get(this.resourceUrl+'AvgPryCat?id='+nro);\n  }\n  getAverages1ProyectoTodasCategorias(nro: number)\n  {\n    return this.httpClient.get(this.resourceUrl+'AvgPryAllCat?id='+nro);\n  }\n  getAveragesTodosProyectos0categoria()\n  {\n    return this.httpClient.get(this.resourceUrl+'AvgAllProjects');\n  }\n  get()\n  {\n    return this.httpClient.get(this.resourceUrl+'');\n  }\n  //http://localhost:3000/test/test?id=1&id2=2\n   \n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AverageComponent } from './Componentes/average/average.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule} from \"@angular/common/http\";\n\n\n\n\n@NgModule({\n  declarations: [    \n  AverageComponent],\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserModule,\n    HttpClientModule,    \n  ],\n  providers: [],\n  bootstrap: [AverageComponent]\n})\nexport class AppModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StatusesDeIssueService {\n  resourceUrl: string;\n  constructor(private httpClient: HttpClient) {\n    this.resourceUrl='http://'+window.location.hostname+':3000/issue_statuses.json';\n    \n   }\n\n   get()\n   {\n     return this.httpClient.get(this.resourceUrl);\n   }\n\n  /* getNameProject(id: number)\n   {\n     return this.httpClient.get(this.resourceUrl+'/'+id+'.json');\n   }*/\n   \n}","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProjectService {\r\n  resourceUrl: string;\r\n  constructor(private httpClient: HttpClient) {\r\n    this.resourceUrl='http://'+window.location.hostname+':3000/issues_api/projects';\r\n    \r\n   }\r\n\r\n   get()\r\n   {\r\n     return this.httpClient.get(this.resourceUrl);\r\n   }\r\n\r\n   getNameProject(id: number)\r\n   {\r\n     return this.httpClient.get(this.resourceUrl+'?id='+id);//FALTAAAAAAAAAAAA\r\n   }\r\n   \r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Evento } from 'src/app/Modelos/Evento';\nimport { ProjectService } from 'src/app/Servicios/project.service';\nimport { StatusesDeIssueService } from 'src/app/Servicios/statuses-de-issue.service';\nimport { CategoriaService} from 'src/app/Servicios/categoria.service';\nimport { EventoService } from 'src/app/Servicios/evento.service';\nimport { Category } from '../../Modelos/Category';\nimport { Project } from '../../Modelos/Project';\nimport { Issue_status } from '../../Modelos/IssueStatus';\n//import { ObjectUnsubscribedError } from 'rxjs';\n\n@Component({\n  selector: 'app-average',\n  templateUrl: './average.component.html',\n  styleUrls: ['./average.component.css']\n})\nexport class AverageComponent implements OnInit {\n  Accion='';\n  Form: FormGroup;\n  OpcionesProyectos: Project[]=[];\n  OpcionesCategoria:  Category[]=[];\n  submitted = false;\n  Resultado='';\n  Lista: Evento[] = [];\n  SinBusquedasRealizadas = true;\n  \n  constructor(\n    public formBuilder: FormBuilder,\n    private projectService: ProjectService,\n    private categoriaService: CategoriaService,\n    private eventoService: EventoService,\n    private statusesDeIssueService: StatusesDeIssueService\n    ) { }\n\n  ngOnInit(): void {\n    this.Form = this.formBuilder.group({\n      IdProyecto: ['',[Validators.required]],\n      IdCategoria: [''],\n      ChResolved:[false]\n    });\n    this.GetProyectos();\n  }\n\n\n \n  Calcular(){\n  //console.log(this.Form.value.IdProyecto);\n  //console.log(this.Form.value.IdCategoria);\n  /*switch (this.Form.value.IdProyecto) {\n    case '':\n      \n      break;\n  \n    default:\n      break;\n  }*/\n  \n\n    if(this.Form.value.IdProyecto==='')\n    {\n      console.log(window.location.hostname);\n      //console.log('entro con 0 a \\'\\'');\n      this.submitted=true;\n      //console.log(this.Form.value.ChResolved);\n      return;\n    }   \n\n      //if()\n    if(this.Form.value.ChResolved==false)\n    {\n      //console.log(\"el valor de el checkbox es false\");\n      if(this.Form.value.IdProyecto==0)\n      {//si\n        //console.log('entro a la opcion');\n        // this.projectService.get().subscribe((res: any)=>{\n        if(this.Form.value.IdCategoria==='')\n        {\n          this.eventoService.getAveragesTodosProyectos0categoria().subscribe((res: any)=> {\n            const itemCopy4={...res};\n            let ListaEventos: Evento[]=[];\n            let milength= Object.keys(itemCopy4).length;\n            for(let i=0;i<milength;i++)\n            {\n              let evento={} as Evento;  \n              let proyecto={} as Project;\n              let categoria={} as Category;\n              proyecto.id=itemCopy4[i].project_id;\n              var avg=itemCopy4[i].avg.substr(0, 19).split(\".\");\n              evento.Average = avg[0];      \n              //evento.Average=itemCopy4[i].avg;\n              categoria.id=0;\n              categoria.name='----'\n              evento.Categoria=categoria;//cambiar a consulta a todos los proyectos \n              this.projectService.getNameProject(itemCopy4[i].project_id).subscribe((res2: any)=> {\n                const itemCopy5 = {...res2};\n                proyecto.name=itemCopy5[0].name;\n              });\n              evento.Proyecto=proyecto;\n              ListaEventos.push(evento);\n             \n            }\n            this.Lista=ListaEventos;\n    \n          });\n          return;\n        }\n        else\n        {\n          //console.log('entro como categoria ALL-ALL');\n          this.Lista=[];        \n            //let idProyecto=0\n          this.projectService.get().subscribe((res: any)=>{\n            const itemCopy={...res};      \n            let ListaEventosx: Evento[]=[];     \n            let milegnht = Object.keys(itemCopy).length;     \n            for(let i=0; i<milegnht; i++)\n            {        \n         \n              //let miProject={} as Project;     \n              this.eventoService.getAverages1ProyectoTodasCategorias(itemCopy[i].id).subscribe((res6x:any)=> {\n                const itemCopy10x={...res6x};\n              \n                let milength2x= Object.keys(itemCopy10x).length;\n                for (let i2 = 0; i2 < milength2x; i2++) {\n                  let proyecto={} as Project;\n                  let categoria={} as Category;\n                  let evento={} as Evento;  \n                  proyecto.id=itemCopy[i].id;\n                  proyecto.name=itemCopy[i].name;\n                  categoria.name=itemCopy10x[i2].name;\n                  categoria.id=0;\n                  evento.Proyecto=proyecto;\n                  evento.Categoria=categoria;\n                  var avg=itemCopy10x[i2].avg.substr(0, 19).split(\".\");\n                  evento.Average = avg[0];   \n                  ListaEventosx.push(evento);              \n                }\n  \n              });\n            }\n            this.Lista=ListaEventosx;\n  \n          });\n          //this.eventoService.getAverages1ProyectoTodasCategorias(this.Form.value.IdProyecto).subscribe((res6:any)=>{      \n          /* miProject.id=itemCopy.projects[i].id;\n            miProject.name=itemCopy.projects[i].name;\n            miProject.identifier=itemCopy.projects[i].identifier;\n            miProject.description=itemCopy.projects[i].description;\n            miProject.status=itemCopy.projects[i].status;\n            miProject.is_public=itemCopy.projects[i].is_public;\n            miProject.created_on=itemCopy.projects[i].created_on;\n            miProject.updated_on=itemCopy.projects[i].updated_on;       \n            ListaProyectos.push(miProject);*/\n         \n            //ListaProyectos.this.OpcionesProyectos=ListaProyectos;\n        }\n        \n      }\n      else\n      {\n        if(this.Form.value.IdCategoria==='')\n        {//si\n          //console.log('entro por categoria=\\'\\'');\n          this.eventoService.getAverages1Proyecto(this.Form.value.IdProyecto).subscribe((res3:any)=>{\n            //console.log(this.Form.value.IdProyecto);\n            const itemCopy6={...res3};\n            let ListaEventos: Evento[]=[];\n            let evento={} as Evento;  \n            let proyecto={} as Project;\n            let categoria={} as Category;\n            var avg=itemCopy6[0].avg.substr(0, 19).split(\".\");\n            evento.Average = avg[0];   \n            //evento.Average=itemCopy6[0].avg;\n            //console.log(itemCopy6[0].avg)\n            this.projectService.getNameProject(this.Form.value.IdProyecto).subscribe((res4:any)=> {\n              const itemCopy7={...res4};\n              proyecto.id=this.Form.value.IdProyecto;\n              proyecto.name=itemCopy7[0].name;\n              //console.log(itemCopy7.project.name)\n              evento.Proyecto=proyecto;\n              categoria.id=0;\n              categoria.name='----'\n              evento.Categoria=categoria;\n              ListaEventos.push(evento);\n              this.Lista=[];\n              this.Lista=ListaEventos;\n              //console.log('fin')\n  \n            });\n           \n          });\n        }\n        else\n        {\n         \n          if(this.Form.value.IdCategoria==0)\n          {//si\n            //console.log('Entro por categoria ==0');\n            this.eventoService.getAverages1ProyectoTodasCategorias(this.Form.value.IdProyecto).subscribe((res6:any)=>{\n              const itemCopy10={...res6};\n              let ListaEventos: Evento[]=[];\n             \n              \n            \n              let milength2= Object.keys(itemCopy10).length;\n              for(let ij=0;ij<milength2;ij++)\n              {\n                \n                this.projectService.getNameProject(this.Form.value.IdProyecto).subscribe((res4:any)=> {\n                  let proyecto={} as Project;\n                  let categoria={} as Category;\n                  let evento={} as Evento;  \n                  categoria.name=itemCopy10[ij].name;\n                  categoria.id=0;\n                  evento.Categoria=categoria;\n                  var avg=itemCopy10[ij].avg.substr(0, 19).split(\".\");\n                  evento.Average = avg[0];  \n                  //evento.Average=itemCopy10[ij].avg;\n                  const itemCopy7={...res4};\n                  proyecto.id=this.Form.value.IdProyecto;\n                  proyecto.name=itemCopy7[0].name;;\n                  evento.Proyecto=proyecto;\n                  ListaEventos.push(evento);\n                });\n               \n              }\n              this.Lista=ListaEventos;\n            });          \n          }\n          else\n          {//no\n            //console.log('entro por categoria!=0');\n            let ListaEventos: Evento[]=[];\n           \n            this.eventoService.getAverages1Proyecto1Categoria(this.Form.value.IdCategoria).subscribe((res50:any)=>{           \n              const itemCopy50={...res50};           \n              this.categoriaService.getCategoriaInfo(this.Form.value.IdCategoria).subscribe((res60:any)=>{\n                const itemCopy60={...res60};\n                this.projectService.getNameProject(this.Form.value.IdProyecto).subscribe((res4:any)=> {                \n                  const itemCopy7={...res4};\n                  let evento={} as Evento;  \n                  let proyecto={} as Project;\n                  let categoria={} as Category;\n                  var avg=itemCopy50[0].avg.substr(0, 19).split(\".\");\n                  evento.Average = avg[0];  \n                  //evento.Average=itemCopy50[0].avg;\n                  proyecto.id=this.Form.value.IdProyecto;\n                  proyecto.name=itemCopy7[0].name;;\n                  evento.Proyecto=proyecto;               \n                  categoria.id=itemCopy60[0].id;\n                  categoria.name=itemCopy60[0].name;\n                  categoria.project_id=itemCopy60[0].project_id;\n                  evento.Categoria=categoria;\n                  ListaEventos.push(evento);\n                });\n                \n              });\n              \n              this.Lista=[];\n              this.Lista=ListaEventos;\n                      \n  \n            });\n          }\n        }\n  \n      }   \n    }   \n\n    if(this.Form.value.ChResolved==true)\n    {\n      this.statusesDeIssueService.get().subscribe((res:any)=>{\n      const itemCopy={...res};\n        //let issue_status: Issue_status;\n      let issue_status={} as Issue_status;  \n        //issue_status.name='';\n        \n      let milenght=Object.keys(itemCopy.issue_statuses).length;\n      for (let i = 0; i < milenght; i++) {\n        if(itemCopy.issue_statuses[i].name=='Resolved'&& itemCopy.issue_statuses[i].is_closed==true)\n        {\n            \n            //console.log(itemCopy.issue_statuses[i]);\n             //console.log(itemCopy.issue_statuses[i].id);\n             //console.log(itemCopy.issue_statuses[i].name);\n           issue_status.id=itemCopy.issue_statuses[i].id;\n           issue_status.name=itemCopy.issue_statuses[i].name;\n           issue_status.is_closed=itemCopy.issue_statuses[i].is_closed;\n             //console.log(itemCopy.issue_statuses[i].is_closed);\n           /** issue_status.id=itemCopy.issue_statuses[i].id;\n            issue_status.name=itemCopy.issue_statuses[i].name;\n            issue_status.is_closed=itemCopy.issue_statuses[i].is_closed; */\n            //console.log(issue_status);\n          i=milenght;           \n        }    \n      }\n\n      if(this.Form.value.IdProyecto==0)\n      {//si\n        //console.log('entro a la opcion');\n        // this.projectService.get().subscribe((res: any)=>{\n        if(this.Form.value.IdCategoria==='')\n        {\n          this.eventoService.getAveragesTodosProyectos0categoriaResolved(issue_status.id).subscribe((res: any)=> {\n          const itemCopy4={...res};\n          let ListaEventos: Evento[]=[];\n          let milength= Object.keys(itemCopy4).length;\n          for(let i=0;i<milength;i++)\n          {\n            let evento={} as Evento;  \n            let proyecto={} as Project;\n            let categoria={} as Category;\n            proyecto.id=itemCopy4[i].project_id;\n            var avg=itemCopy4[i].avg.substr(0, 19).split(\".\");\n            evento.Average = avg[0];  \n            //evento.Average=itemCopy4[i].avg;\n            categoria.id=0;\n            categoria.name='----'\n            evento.Categoria=categoria;//cambiar a consulta a todos los proyectos \n            this.projectService.getNameProject(itemCopy4[i].project_id).subscribe((res2: any)=> {\n              const itemCopy5 = {...res2};\n              proyecto.name=itemCopy5[0].name;\n            });\n            evento.Proyecto=proyecto;\n            ListaEventos.push(evento);\n             \n          }\n          this.Lista=ListaEventos;\n    \n          });\n          return;\n        }\n        else\n        {\n          //console.log('entro como categoria ALL-ALL');\n          this.Lista=[];        \n            //let idProyecto=0\n          this.projectService.get().subscribe((res: any)=>{\n            const itemCopy={...res};      \n            let ListaEventosx: Evento[]=[];     \n            let milegnht = Object.keys(itemCopy).length;     \n            for(let i=0; i<milegnht; i++)\n            {        \n         \n              //let miProject={} as Project;     \n              this.eventoService.getAverages1ProyectoTodasCategoriasResolved(itemCopy[i].id, issue_status.id).subscribe((res6x:any)=> {\n                const itemCopy10x={...res6x};\n              \n                let milength2x= Object.keys(itemCopy10x).length;\n                for (let i2 = 0; i2 < milength2x; i2++) {\n                  let proyecto={} as Project;\n                  let categoria={} as Category;\n                  let evento={} as Evento;  \n                  proyecto.id=itemCopy[i].id;\n                  proyecto.name=itemCopy[i].name;\n                  categoria.name=itemCopy10x[i2].name;\n                  categoria.id=0;\n                  evento.Proyecto=proyecto;\n                  evento.Categoria=categoria;\n                  var avg=itemCopy10x[i2].avg.substr(0, 19).split(\".\");\n                  evento.Average = avg[0];  \n                  //evento.Average=itemCopy10x[i2].avg;\n                  ListaEventosx.push(evento);              \n                }\n  \n              });\n            }\n            this.Lista=ListaEventosx;\n  \n          });\n          \n        }\n        \n      }\n      else\n      {\n        if(this.Form.value.IdCategoria==='')\n        {//si\n          //console.log('entro por categoria=\\'\\'');\n          this.eventoService.getAverages1ProyectoResolved(this.Form.value.IdProyecto, issue_status.id).subscribe((res3:any)=>{\n            //console.log(this.Form.value.IdProyecto);\n            const itemCopy6={...res3};\n            let ListaEventos: Evento[]=[];\n            let evento={} as Evento;  \n            let proyecto={} as Project;\n            let categoria={} as Category;\n            var avg=itemCopy6[0].avg.substr(0, 19).split(\".\");\n            evento.Average = avg[0];  \n            //evento.Average=itemCopy6[0].avg;\n            //console.log(itemCopy6[0].avg)\n            this.projectService.getNameProject(this.Form.value.IdProyecto).subscribe((res4:any)=> {\n              const itemCopy7={...res4};\n              proyecto.id=this.Form.value.IdProyecto;\n              proyecto.name=itemCopy7[0].name;\n              //console.log(itemCopy7.project.name)\n              evento.Proyecto=proyecto;\n              categoria.id=0;\n              categoria.name='----'\n              evento.Categoria=categoria;\n              ListaEventos.push(evento);\n              this.Lista=[];\n              this.Lista=ListaEventos;\n              //console.log('fin')\n  \n            });\n           \n          });\n        }\n        else\n        {\n         \n          if(this.Form.value.IdCategoria==0)\n          {//si\n            //console.log('Entro por categoria ==0');\n            this.eventoService.getAverages1ProyectoTodasCategoriasResolved(this.Form.value.IdProyecto, issue_status.id).subscribe((res6:any)=>{\n              const itemCopy10={...res6};\n              let ListaEventos: Evento[]=[];\n             \n              \n            \n              let milength2= Object.keys(itemCopy10).length;\n              for(let ij=0;ij<milength2;ij++)\n              {\n                \n                this.projectService.getNameProject(this.Form.value.IdProyecto).subscribe((res4:any)=> {\n                  let proyecto={} as Project;\n                  let categoria={} as Category;\n                  let evento={} as Evento;  \n                  categoria.name=itemCopy10[ij].name;\n                  categoria.id=0;\n                  evento.Categoria=categoria;\n                  var avg=itemCopy10[ij].avg.substr(0, 19).split(\".\");\n                  evento.Average = avg[0];  \n                  //evento.Average=itemCopy10[ij].avg;\n                  const itemCopy7={...res4};\n                  proyecto.id=this.Form.value.IdProyecto;\n                  proyecto.name=itemCopy7[0].name;;\n                  evento.Proyecto=proyecto;\n                  ListaEventos.push(evento);\n                });\n               \n              }\n              this.Lista=ListaEventos;\n            });          \n          }\n          else\n          {//no\n            //console.log('entro por categoria!=0');\n            let ListaEventos: Evento[]=[];\n           \n            this.eventoService.getAverages1Proyecto1CategoriaResolved(this.Form.value.IdCategoria, issue_status.id).subscribe((res50:any)=>{           \n              const itemCopy50={...res50};           \n              this.categoriaService.getCategoriaInfo(this.Form.value.IdCategoria).subscribe((res60:any)=>{\n                const itemCopy60={...res60};\n                this.projectService.getNameProject(this.Form.value.IdProyecto).subscribe((res4:any)=> {                \n                  const itemCopy7={...res4};\n                  let evento={} as Evento;  \n                  let proyecto={} as Project;\n                  let categoria={} as Category;\n                  var avg=itemCopy50[0].avg.substr(0, 19).split(\".\");\n                  evento.Average = avg[0];  \n                  //evento.Average=itemCopy50[0].avg;\n                  proyecto.id=this.Form.value.IdProyecto;\n                  proyecto.name=itemCopy7[0].name;;\n                  evento.Proyecto=proyecto;               \n                  categoria.id=itemCopy60[0].id;\n                  categoria.name=itemCopy60[0].name;\n                  categoria.project_id=itemCopy60[0].project_id;\n                  evento.Categoria=categoria;\n                  ListaEventos.push(evento);\n                });\n                \n              });\n              \n              this.Lista=[];\n              this.Lista=ListaEventos;\n                      \n  \n            });\n          }\n        }\n  \n      } \n       \n        //console.log(issue_status);\n        \n      //let EstadoResolved: any;\n      });\n      \n    }\n\n\n\n \n    \n  }\n\n  CargarCategorias(){\n\n    \n    this.OpcionesCategoria=[];\n\n    this.SinBusquedasRealizadas=false;\n    if(this.Form.value.IdProyecto==='')\n    {\n      this.OpcionesCategoria=[];\n      return;\n    }\n    else\n    {\n      if(this.Form.value.IdProyecto==0)\n      {\n        let ListaCategorias: Category[]=[];\n        let categoria={} as Category;\n        categoria.id=0;\n        categoria.name='All Categories';\n        ListaCategorias.push(categoria);\n        this.OpcionesCategoria=ListaCategorias;\n      }\n      else{\n        this.categoriaService.getById(this.Form.value.IdProyecto).subscribe((res:any)=> {\n          const itemCopy2={...res};\n          let ListaCategorias: Category[]=[];\n          let largor=Object.keys(itemCopy2).length;\n          if(largor==0)\n          {\n            this.SinBusquedasRealizadas = true;\n            return;\n          }\n          \n          for(let i=0; i<largor; i++)\n          {\n            let categoria={} as Category;\n            categoria.id=itemCopy2[i].id;\n            categoria.project_id=this.Form.value.IdProyecto;\n            categoria.name=itemCopy2[i].name;\n            ListaCategorias.push(categoria);\n          }\n          let categoria={} as Category;\n          categoria.id=0;\n          categoria.name='All Categories';\n          ListaCategorias.push(categoria);\n          this.OpcionesCategoria=ListaCategorias;\n  \n  \n        });\n      }\n    \n    }\n  \n    \n\n  }\n\n  GetProyectos(){\n    let idProyecto=0\n    this.projectService.get().subscribe((res: any)=>{\n      const itemCopy={...res};      \n      let ListaProyectos: Project[] = [];      \n      let milegnht = Object.keys(itemCopy).length;     \n      \n      \n      for(let i=0; i<milegnht; i++)\n      {        \n        let miProject={} as Project;     \n        \n        miProject.id=itemCopy[i].id;//itemCopy4[i].project_id;\n        miProject.name=itemCopy[i].name;\n        miProject.identifier=itemCopy[i].identifier;\n        miProject.description=itemCopy[i].description;\n        miProject.status=itemCopy[i].status;\n        miProject.is_public=itemCopy[i].is_public;\n        miProject.created_on=itemCopy[i].created_on;\n        miProject.updated_on=itemCopy[i].updated_on;       \n        ListaProyectos.push(miProject);\n      }\n      let miProject= {} as Project;\n      miProject.id=0;\n      miProject.name='All projects';\n      ListaProyectos.push(miProject);\n      this.OpcionesProyectos=ListaProyectos;\n    \n    });\n  }\n\n}\n","<div class=\"container\">\n<h3>Averages times <small>{{Accion}}</small></h3>\n<form name=\"Form\" [formGroup]='Form'>           \n\n    <!--campo proyectos-->\n    <div class=\"form-group row\">\n        <label class=\"col-form-label col-sm-2 col-sm-offset-2\" for=\"IdProyecto\">\n            Projects <span class=\"text-danger\">*</span>\n        </label>\n        <div class=\"col-sm-6\">\n            <select name=\"IdProyecto\" class=\"form-control\" formControlName=\"IdProyecto\" (change)='CargarCategorias()'\n    [ngClass]=\"{'is-invalid': (Form.controls.IdProyecto.touched || submitted)  \n        && Form.controls.IdProyecto.errors}\" >\n                <option *ngFor=\"let opt of OpcionesProyectos\" [ngValue]=\"opt.id\">\n                    ‌{{ opt.name }}\n                <option>\n            </select>\n            <span class=\"text-danger\" *ngIf=\"(Form.controls.IdProyecto.touched || submitted) \n                    && Form.controls.IdProyecto.errors?.required\">\n                    enter value\n            </span>\n                      \n                 \n        </div>\n                <div class=\"col p-4\">       \n                        \n                    <input name=\"ChResolved\" class=\"form-control\" formControlName=\"ChResolved\" type=\"checkbox\" class=\"form-check-input\" name=\"ChResolved\" id=\"ChResolved\" value=\"{{true}}\">\n                    <label class=\"form-check-label text-success\" for=\"ChResolved\">\n                        <b>Only resolved</b> \n                    </label>  \n               \n                </div>\n               \n\n           \n\n                         \n               \n             \n        \n    </div>\n      <!--campo issues-querys-->\n      <div class=\"form-group row\">\n        <label class=\"col-form-label col-sm-2 col-sm-offset-2\" for=\"IdCategoria\">\n            Categories <span class=\"text-danger\">*</span>\n        </label>\n        <div class=\"col-sm-6\">\n            <select name=\"IdCategoria\" class=\"form-control\" formControlName=\"IdCategoria\"\n    [ngClass]=\"{'is-invalid': (Form.controls.IdCategoria.touched || submitted)  \n        && Form.controls.IdCategoria.errors}\" >\n                <option *ngFor=\"let opt of OpcionesCategoria\" [ngValue]=\"opt.id\">\n                    ‌{{ opt.name }}\n                <option>\n            </select>\n            <span class=\"text-danger\" *ngIf=\"(Form.controls.IdCategoria.touched || submitted) \n                    && Form.controls.IdCategoria.errors?.required\">\n                    enter value\n            </span>\n        </div>\n    </div>\n    <!-- Botones -->\n\t<div class=\"row justify-content-center\">\n\t\t<button type=\"button\" class=\"btn btn-primary col-6\" (click)=\"Calcular()\">\n        <span class=\"fas fa-search\"> </span> Calculate\n        </button>             \n    </div>    \n    <div class=\"container w-50 text-center\">\n    <div class=\"card\">\n        <h5 class=\"card-header\"><b>Result</b></h5>\n        <div class=\"card-body\">\n            <div id=\"divTablaResultados\" *ngIf=\"Lista?.length > 0\">\n                <table class=\"table table-bordered table-striped \">\n                    <thead>\n                        <tr>\n                            <th class=\"text-center\">Project</th>\n                            <th class=\"text-center\">Category</th>\n                            <th class=\"text-center\">Average</th>                        \n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor=\"let dto of Lista\">\n                            <td class=\"text-center\">{{dto.Proyecto.name}}</td>\n                            <td class=\"text-center\">{{dto.Categoria.name}}</td>\n                            <td class=\"text-center\">{{dto.Average}}</td>                                                                  \n                        </tr>\n                    </tbody>\n                </table>                     \n            </div>\n        </div>\n    </div>\n    </div>>\n\t\t\n</form>\n<!--Falta agregar info de q no se encontraron categorias-->\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}